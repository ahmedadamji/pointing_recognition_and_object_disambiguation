<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <!-- Storing default arg names -->
  <arg name="world"  default="pointing1"/>
  <arg name="gzpose" default="-x 0.0  -y 0.0 -z 0.0 -R 0.0 -P 0.0 -Y  0.0"/>
  <!-- <arg name="gzpose" default="-x 0.0 -y 0.0 -z 0.0 -R 0.0 -P 0.0 -Y -1.570796" if="$(arg lost)"/> -->
  <arg name="gzclient"          default="true"/>
  <arg name="public_sim"        default="false"/>
  <arg name="extra_gazebo_args" default=""/>

  <env name="GAZEBO_MODEL_PATH" value="$(find custom_worlds)/models" />
  <env name="GAZEBO_RESOURCE_PATH" value="$(find custom_worlds)/worlds" />
  <arg name="map" default="$(find pointing_recognition)/maps/$(arg world)" />

  <!-- <include file="$(find custom_worlds)/launch/tiago_mapping.launch"> -->
  <!-- <include file="$(find custom_worlds)/launch/tiago_navigation.launch"> -->
  <include file="$(find custom_worlds)/launch/tiago_navigation.launch">
      <arg name="world"             value="$(arg world)"/>
      <arg name="map"               value="$(arg map)" />
      <arg name="gzpose"            value="$(arg gzpose)"/>
      <arg name="gzclient"          value="$(arg gzclient)"/>
      <arg name="public_sim"        value="$(arg public_sim)"/>
      <arg name="extra_gazebo_args" value="$(arg extra_gazebo_args)"/>
    </include>

    <!-- Loading the custom motions, guest locations and features for disambiguation into the parameter server -->
    <rosparam command="load" file="$(find pointing_recognition)/config/motions.yaml" />
    <rosparam command="load" file="$(find pointing_recognition)/config/locations.yaml" />
    <rosparam command="load" file="$(find pointing_recognition)/config/features.yaml" />

    <!-- Launching packages used alongside pointing_recognition -->
    <node pkg="lasr_pcl" type="transform_cloud_server" name="transform_cloud_server" respawn="true" output="screen"/>
    <node pkg="lasr_object_detection_yolo" type="object_detection_server.py" name="yolo_object_detection_server" respawn="true" output="screen"/>
    <node pkg="jeff_segment_objects" type="jeff_segment_objects_node" name="segment_objects_server" respawn="true" output="screen"/>

</launch>
